{
	"name": "daedalus-globalnode",
	"displayName": "ue4-globalnode",
	"description": "Command-line tools and snippets for non-replicated procedural/material editor workflow.",
	"publisher": "suvam0451",
	"version": "1.0.0",
	"license": "MPL-2.0",
	"repository": {
		"type": "git",
		"url": "https://gitlab.com/suvam0451/vscode-extension"
	},
	"engines": {
		"vscode": "^1.39.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:cpp",
		"onCommand:extension.helloWorld",
		"onCommand:extension.compileShaders",
		"onCommand:extension.onConstruction",
		"onCommand:extension.includeManager",
		"onCommand:extension.Daedalus.PopulateSourceFile",
		"onCommand:extension.Daedalus.errorLibrary",
		"onCommand:extension.Daedalus.createClass",
		"onCommand:extension.Daedalus.injectExcludes",
		"onCommand:extension.Daedalus.initializeAssetFolder"
	],
	"main": "/dist/extension",
	"contributes": {
		"commands": [
			{
				"command": "extension.helloWorld",
				"title": "Hello World"
			},
			{
				"command": "extension.compileShaders",
				"title": "Compile shaders for this project."
			},
			{
				"command": "extension.onConstruction",
				"title": "Actor.OnConstruction(Transform).",
				"when": "inputFocus"
			},
			{
				"command": "extension.includeManager",
				"title": "Daedalus: Include Headers"
			},
			{
				"command": "extension.Daedalus.PopulateSourceFile",
				"title": "Daedalus.PopulateSourceFromHeader"
			},
			{
				"command": "extension.Daedalus.errorLibrary",
				"title": "Daedalus: Search Error Library"
			},
			{
				"command": "extension.Daedalus.createClass",
				"title": "Daedalus: Generate UE4 Class(.h/.cpp)"
			},
			{
				"command": "extension.Daedalus.injectExcludes",
				"title": "UE4 : Inject exclude definitions in Workspace File"
			},
			{
				"command": "extension.Daedalus.initializeAssetFolder",
				"title": "UE4 : Create new Asset Stream"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "editorHasSelection && editorLangId == 'cpp'",
					"command": "extension.Daedalus.createClass",
					"group": "Hangover"
				}
			]
		},
		"snippets": [
			{
				"language": "cpp",
				"path": "./snippets/ue4_suvam0451.json"
			},
			{
				"language": "cpp",
				"path": "./snippets/ue4_procedural.json"
			},
			{
				"language": "cpp",
				"path": "./snippets/ue4_includes.json"
			},
			{
				"language": "cpp",
				"path": "./snippets/uprop.json"
			},
			{
				"language": "cpp",
				"path": "./snippets/ue4_data_handling.json"
			},
			{
				"language": "cpp",
				"path": "./snippets/ue4_gameplay_systems.json"
			},
			{
				"language": "cpp",
				"path": "./snippets/ufunc.json"
			},
			{
				"language": "cpp",
				"path": "./snippets/uinit.json"
			},
			{
				"language": "cpp",
				"path": "./snippets/utrace.json"
			},
			{
				"language": "cpp",
				"path": "./snippets/udebug.json"
			}
		],
		"configuration": {
			"title": "GlobalNode",
			"properties": {
				"globalnode.assetFolders": {
					"type": "array",
					"default": [],
					"description": "Fullpaths to list of folders initialized using this plug-in from which to pull assets to UE4."
				},
				"globalnode.allowUserExtensions": {
					"type": "boolean",
					"default": false,
					"description": "Read the online docs about extending various templates and set this to true to allow custom functionalities."
				}
			}
		}
	},
	"scripts": {
		"compile": "tsc -p ./",
		"pretest": "yarn run compile",
		"test": "node ./out/test/runTest.js",
		"test-compile": "tsc -p ./",
		"vscode:prepublish": "webpack --mode production",
		"watch": "tsc -watch -p ./",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch"
	},
	"devDependencies": {
		"@types/mocha": "^5.2.7",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.39.0",
		"glob": "^7.1.5",
		"mocha": "^6.2.2",
		"ts-loader": "^6.2.1",
		"tslint": "^5.20.0",
		"typescript": "^3.6.4",
		"vsce": "^1.71.0",
		"vscode-test": "^1.2.2",
		"webpack": "^4.41.5",
		"webpack-cli": "^3.3.10"
	},
	"dependencies": {
		"@types/lodash": "^4.14.149",
		"fs": "^0.0.1-security",
		"line-reader": "^0.4.0",
		"path": "^0.12.7",
		"xregexp": "^4.2.4"
	}
}
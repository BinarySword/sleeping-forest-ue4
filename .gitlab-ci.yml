image: node:latest

stages:
  - compile
  - assembly
  - publish

Default:
  stage: publish
  script:
    # Comment out to use github packages
    - yarn config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - npm config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - yarn login --registry=https://npm.pkg.github.com
    # Comment out to use gitlab packages
    # - npm config set '//gitlab.com/api/v4/packages/npm/:_authToken' "${GITLAB_AUTH_TOKEN}
    # - yarn config set '//gitlab.com/api/v4/packages/npm/:_authToken' "${GITLAB_AUTH_TOKEN}
    # - yarn login --registry=https://gitlab.com/api/v4/packages/npm
    - yarn install
    - yarn run webpack
    - yarn vsce package
  artifacts:
    paths:
      - ./*.vsix

# Compile the golang project in /devops folder
PackageCritstrike:
  image: golang:latest
  stage: compile
  script:
    # Make the output folders
    - mkdir -p bin/{linux,macos,win64}
    # Switch folders and generate binaries
    - cd devops
    - GOOS=linux GOARCH=amd64 go build -o ../bin/linux/critstrike critstrike.go
    - GOOS=darwin GOARCH=amd64 go build -o ../bin/macos/critstrike critstrike.go
    - GOOS=windows GOARCH=amd64 go build -o ../bin/win64/critstrike.exe critstrike.go
    - cd ..
  artifacts:
    paths:
      - ./bin

# patch updates
Shipping_Patch:
  stage: publish
  script:
    - yarn config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - npm config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - yarn login --registry=https://npm.pkg.github.com
    - yarn install
    - yarn run webpack
    - yarn vsce publish patch -p ${VSCODE_AUTH_TOKEN}
  dependencies:
    - PackageCritstrike
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /-patch/
  artifacts:
    paths:
      - ./*.vsix

# minor version increments
Shipping_Minor:
  stage: publish
  script:
    - yarn config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - npm config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - yarn login --registry=https://npm.pkg.github.com
    - yarn install
    - yarn run webpack
    - yarn vsce publish minor -p ${VSCODE_AUTH_TOKEN}
  dependencies:
    - PackageCritstrike
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /-minor/
  artifacts:
    paths:
      - ./*.vsix

# major version increments
Shipping_Major:
  stage: publish
  script:
    - yarn config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - npm config set '//npm.pkg.github.com/:_authToken' "${GITHUB_AUTH_TOKEN}"
    - yarn login --registry=https://npm.pkg.github.com
    - yarn install
    - yarn run webpack
    - yarn vsce publish major -p ${VSCODE_AUTH_TOKEN}
  dependencies:
    - PackageCritstrike
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /-major/
  artifacts:
    paths:
      - ./*.vsix
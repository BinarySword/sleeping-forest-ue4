[
	{
		"id": "BeginPlay",
		"comment": "// Called when the game starts or when spawned",
		"signature": "virtual void BeginPlay() override;",
		"field": "protected",
		"body": ["Super::BeginPlay();"]
	},
	{
		"id": "Tick",
		"comment": "// Called every frame",
		"signature": "virtual void Tick(float DeltaTime) override;",
		"field": "public",
		"body": ["Super::Tick(DeltaTime);"]
	},
	{
		"id": "OnConstruction",
		"comment": "// Called when an instance of this class is placed (in editor) or spawned.",
		"signature": "virtual void OnConstruction(const FTransform &Transform) override;",
		"field": "private",
		"body": ["// Function not implemented"]
	},
	{
		"id": "SetupPlayerInputComponent",
		"comment": "// Called to bind functionality to input",
		"signature": "virtual void SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent) override;",
		"field": "public",
		"body": [
			"Super::SetupPlayerInputComponent(PlayerInputComponent);"
		]
	},
	{
		"id": "OnPossess",
		"comment": "// ",
		"signature": "virtual void OnPossess(APawn *MyPawn) override;",
		"field": "protected",
		"body": []
	},
	{
		"id": "GetControlRotation",
		"comment": "// ",
		"signature": "virtual FRotator GetControlRotation() const override;",
		"field": "private",
		"body": [
			"if(GetPawn() != nullptr){",
			"\treturn FRotator(0.0f, GetPawn()->GetActorRotation().Yaw, 0.0f);",
			"}",
			"else{",
			"\treturn FRotator(0.0f);",
			"}"
		]
	},
	{
		"id": "NativeUpdateAnimation",
		"comment": "// Similar to Tick() for animations",
		"signature": "virtual void NativeUpdateAnimation(float DeltaTimeX) override;",
		"field": "protected",
		"body": ["Super::NativeUpdateAnimation(DeltaTimeX);"]
	},
	{
		"id": "NativeInitializeAnimation",
		"comment": "// Similar to BeginPlay() for animations",
		"signature": "virtual void NativeInitializeAnimation() override;",
		"field": "protected",
		"body": ["Super::NativeInitializeAnimation();"]
	}
]
